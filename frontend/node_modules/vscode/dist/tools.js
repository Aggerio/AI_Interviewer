function unsupported() {
    throw new Error('unsupported');
}
function memoized(fct) {
    let v = null;
    return (...args) => {
        if (v == null) {
            v = fct(...args);
        }
        return v;
    };
}
function memoizedConstructor(ctor) {
    return new Proxy(ctor, {
        construct: memoized((target, args) => {
            return Reflect.construct(ctor, args);
        })
    });
}
export { memoized, memoizedConstructor, unsupported };
