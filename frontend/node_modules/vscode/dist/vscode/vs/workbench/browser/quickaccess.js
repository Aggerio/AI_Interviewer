import { localize } from 'monaco-editor/esm/vs/nls.js';
import { ContextKeyExpr, RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';
import { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';
import { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';
const inQuickPickContextKeyValue = 'inQuickOpen';
const InQuickPickContextKey = ( new RawContextKey(inQuickPickContextKeyValue, false, ( localize('inQuickOpen', "Whether keyboard focus is inside the quick open control"))));
const inQuickPickContext = ( ContextKeyExpr.has(inQuickPickContextKeyValue));
const defaultQuickAccessContextKeyValue = 'inFilesPicker';
const defaultQuickAccessContext = ( ContextKeyExpr.and(inQuickPickContext, ( ContextKeyExpr.has(defaultQuickAccessContextKeyValue))));
function getQuickNavigateHandler(id, next) {
    return accessor => {
        const keybindingService = accessor.get(IKeybindingService);
        const quickInputService = accessor.get(IQuickInputService);
        const keys = keybindingService.lookupKeybindings(id);
        const quickNavigate = { keybindings: keys };
        quickInputService.navigate(!!next, quickNavigate);
    };
}
export { InQuickPickContextKey, defaultQuickAccessContext, defaultQuickAccessContextKeyValue, getQuickNavigateHandler, inQuickPickContext, inQuickPickContextKeyValue };
