import { __decorate, __param } from '../../../../../node_modules/tslib/tslib.es6.js';
import { Disposable, DisposableMap } from 'monaco-editor/esm/vs/base/common/lifecycle.js';
import { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';
import { MainContext } from '../common/extHost.protocol.js';
import { extHostNamedCustomer } from '../../services/extensions/common/extHostCustomers.js';
let MainThreadLabelService = class MainThreadLabelService extends Disposable {
    constructor(_, _labelService) {
        super();
        this._labelService = _labelService;
        this._resourceLabelFormatters = this._register(( new DisposableMap()));
    }
    $registerResourceLabelFormatter(handle, formatter) {
        formatter.priority = true;
        const disposable = this._labelService.registerCachedFormatter(formatter);
        this._resourceLabelFormatters.set(handle, disposable);
    }
    $unregisterResourceLabelFormatter(handle) {
        this._resourceLabelFormatters.deleteAndDispose(handle);
    }
};
MainThreadLabelService = __decorate([
    extHostNamedCustomer(MainContext.MainThreadLabelService),
    ( __param(1, ILabelService))
], MainThreadLabelService);
export { MainThreadLabelService };
