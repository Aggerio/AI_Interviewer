import { ExtensionIdentifier } from 'monaco-editor/esm/vs/platform/extensions/common/extensions.js';
import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';
class ExtensionSecrets {
    #secretState;
    constructor(extensionDescription, secretState) {
        this._onDidChange = ( new Emitter());
        this.onDidChange = this._onDidChange.event;
        this._id = ExtensionIdentifier.toKey(extensionDescription.identifier);
        this.#secretState = secretState;
        this.#secretState.onDidChangePassword(e => {
            if (e.extensionId === this._id) {
                this._onDidChange.fire({ key: e.key });
            }
        });
    }
    get(key) {
        return this.#secretState.get(this._id, key);
    }
    store(key, value) {
        return this.#secretState.store(this._id, key, value);
    }
    delete(key) {
        return this.#secretState.delete(this._id, key);
    }
}
export { ExtensionSecrets };
