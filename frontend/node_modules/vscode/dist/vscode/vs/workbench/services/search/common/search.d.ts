import { UriComponents, URI } from '../../../../base/common/uri.js';

interface IPatternInfo {
    pattern: string;
    isRegExp?: boolean;
    isWordMatch?: boolean;
    wordSeparators?: string;
    isMultiline?: boolean;
    isUnicode?: boolean;
    isCaseSensitive?: boolean;
    notebookInfo?: INotebookPatternInfo;
}
interface INotebookPatternInfo {
    isInNotebookMarkdownInput?: boolean;
    isInNotebookMarkdownPreview?: boolean;
    isInNotebookCellInput?: boolean;
    isInNotebookCellOutput?: boolean;
}
interface IFileMatch<U extends UriComponents = URI> {
    resource: U;
    results?: ITextSearchResult[];
}
type IRawFileMatch2 = IFileMatch<UriComponents>;
interface ITextSearchPreviewOptions {
    matchLines: number;
    charsPerLine: number;
}
interface ISearchRange {
    readonly startLineNumber: number;
    readonly startColumn: number;
    readonly endLineNumber: number;
    readonly endColumn: number;
}
interface ITextSearchResultPreview {
    text: string;
    matches: ISearchRange | ISearchRange[];
    cellFragment?: string;
}
interface ITextSearchMatch {
    uri?: URI;
    ranges: ISearchRange | ISearchRange[];
    preview: ITextSearchResultPreview;
    webviewIndex?: number;
}
interface ITextSearchContext {
    uri?: URI;
    text: string;
    lineNumber: number;
}
type ITextSearchResult = ITextSearchMatch | ITextSearchContext;

export { IFileMatch, INotebookPatternInfo, IPatternInfo, IRawFileMatch2, ISearchRange, ITextSearchContext, ITextSearchMatch, ITextSearchPreviewOptions, ITextSearchResult, ITextSearchResultPreview };
