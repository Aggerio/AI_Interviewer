import { IHoverService, IHoverOptions, IHoverWidget } from './hover.js';
import { IContextViewService, IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';
import { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';
import { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';
import { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';

declare class HoverService implements IHoverService {
    private readonly _instantiationService;
    private readonly _contextViewService;
    private readonly _keybindingService;
    private readonly _accessibilityService;
    readonly _serviceBrand: undefined;
    private _currentHoverOptions;
    private _currentHover;
    private _lastHoverOptions;
    private _lastFocusedElementBeforeOpen;
    constructor(_instantiationService: IInstantiationService, _contextViewService: IContextViewService, contextMenuService: IContextMenuService, _keybindingService: IKeybindingService, _accessibilityService: IAccessibilityService);
    showHover(options: IHoverOptions, focus?: boolean, skipLastFocusedUpdate?: boolean): IHoverWidget | undefined;
    hideHover(): void;
    private _intersectionChange;
    showAndFocusLastHover(): void;
    private _keyDown;
    private _keyUp;
}

export { HoverService };
