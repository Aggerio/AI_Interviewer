import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';
import { addMatchMediaChangeListener } from 'monaco-editor/esm/vs/base/browser/browser.js';
import { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';
class BrowserHostColorSchemeService extends Disposable {
    constructor() {
        super();
        this._onDidSchemeChangeEvent = this._register(( new Emitter()));
        this.registerListeners();
    }
    registerListeners() {
        addMatchMediaChangeListener('(prefers-color-scheme: dark)', () => {
            this._onDidSchemeChangeEvent.fire();
        });
        addMatchMediaChangeListener('(forced-colors: active)', () => {
            this._onDidSchemeChangeEvent.fire();
        });
    }
    get onDidChangeColorScheme() {
        return this._onDidSchemeChangeEvent.event;
    }
    get dark() {
        if (window.matchMedia(`(prefers-color-scheme: light)`).matches) {
            return false;
        }
        else if (window.matchMedia(`(prefers-color-scheme: dark)`).matches) {
            return true;
        }
        return false;
    }
    get highContrast() {
        if (window.matchMedia(`(forced-colors: active)`).matches) {
            return true;
        }
        return false;
    }
}
export { BrowserHostColorSchemeService };
