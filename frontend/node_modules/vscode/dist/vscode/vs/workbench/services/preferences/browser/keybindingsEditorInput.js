import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';
import { OS } from 'monaco-editor/esm/vs/base/common/platform.js';
import * as nls from 'monaco-editor/esm/vs/nls.js';
import { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';
import { EditorInput } from '../../../common/editor/editorInput.js';
import { KeybindingsEditorModel } from './keybindingsEditorModel.js';
let KeybindingsEditorInput = class KeybindingsEditorInput extends EditorInput {
    static { this.ID = 'workbench.input.keybindings'; }
    constructor(instantiationService) {
        super();
        this.searchOptions = null;
        this.resource = undefined;
        this.keybindingsModel = instantiationService.createInstance(KeybindingsEditorModel, OS);
    }
    get typeId() {
        return KeybindingsEditorInput.ID;
    }
    getName() {
        return ( nls.localize('keybindingsInputName', "Keyboard Shortcuts"));
    }
    async resolve() {
        return this.keybindingsModel;
    }
    matches(otherInput) {
        return otherInput instanceof KeybindingsEditorInput;
    }
    dispose() {
        this.keybindingsModel.dispose();
        super.dispose();
    }
};
KeybindingsEditorInput = ( __decorate([
    ( __param(0, IInstantiationService))
], KeybindingsEditorInput));
export { KeybindingsEditorInput };
