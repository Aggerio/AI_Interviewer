import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';
import { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';
import { URI } from 'monaco-editor/esm/vs/base/common/uri.js';
import * as nls from 'monaco-editor/esm/vs/nls.js';
import { EditorInput } from '../../../common/editor/editorInput.js';
import { IPreferencesService } from './preferences.js';
let SettingsEditor2Input = class SettingsEditor2Input extends EditorInput {
    static { this.ID = 'workbench.input.settings2'; }
    constructor(_preferencesService) {
        super();
        this.resource = ( URI.from({
            scheme: Schemas.vscodeSettings,
            path: `settingseditor`
        }));
        this._settingsModel = _preferencesService.createSettings2EditorModel();
    }
    matches(otherInput) {
        return super.matches(otherInput) || otherInput instanceof SettingsEditor2Input;
    }
    get typeId() {
        return SettingsEditor2Input.ID;
    }
    getName() {
        return ( nls.localize('settingsEditor2InputName', "Settings"));
    }
    async resolve() {
        return this._settingsModel;
    }
    dispose() {
        this._settingsModel.dispose();
        super.dispose();
    }
};
SettingsEditor2Input = ( __decorate([
    ( __param(0, IPreferencesService))
], SettingsEditor2Input));
export { SettingsEditor2Input };
