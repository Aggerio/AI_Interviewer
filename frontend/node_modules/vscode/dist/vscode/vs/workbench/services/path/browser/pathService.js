import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';
import { IRemoteAgentService } from '../../remote/common/remoteAgentService.js';
import { AbstractPathService } from '../common/pathService.js';
import { URI } from 'monaco-editor/esm/vs/base/common/uri.js';
import { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';
import { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';
import { firstOrDefault } from 'monaco-editor/esm/vs/base/common/arrays.js';
import { dirname } from 'monaco-editor/esm/vs/base/common/resources.js';
let BrowserPathService = class BrowserPathService extends AbstractPathService {
    constructor(remoteAgentService, environmentService, contextService) {
        super(guessLocalUserHome(environmentService, contextService), remoteAgentService, environmentService, contextService);
    }
};
BrowserPathService = ( __decorate([
    ( __param(0, IRemoteAgentService)),
    ( __param(1, IWorkbenchEnvironmentService)),
    ( __param(2, IWorkspaceContextService))
], BrowserPathService));
function guessLocalUserHome(environmentService, contextService) {
    const workspace = contextService.getWorkspace();
    const firstFolder = firstOrDefault(workspace.folders);
    if (firstFolder) {
        return firstFolder.uri;
    }
    if (workspace.configuration) {
        return dirname(workspace.configuration);
    }
    return ( URI.from({
        scheme: AbstractPathService.findDefaultUriScheme(environmentService, contextService),
        authority: environmentService.remoteAuthority,
        path: '/'
    }));
}
export { BrowserPathService };
