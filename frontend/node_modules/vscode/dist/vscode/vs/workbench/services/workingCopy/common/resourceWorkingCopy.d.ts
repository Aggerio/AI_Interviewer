import { IDisposable } from '../../../../base/common/lifecycle.js';
import { Event } from '../../../../base/common/event.js';
import { IWorkingCopy } from './workingCopy.js';

/**
 * A resource based `IWorkingCopy` is backed by a `URI` from a
 * known file system provider.
 */
interface IResourceWorkingCopy extends IWorkingCopy, IDisposable {
    /**
     * An event for when the orphaned state of the resource working copy changes.
     */
    readonly onDidChangeOrphaned: Event<void>;
    /**
     * Whether the resource working copy is orphaned or not.
     */
    isOrphaned(): boolean;
    /**
     * An event for when the file working copy has been disposed.
     */
    readonly onWillDispose: Event<void>;
    /**
     * Whether the file working copy has been disposed or not.
     */
    isDisposed(): boolean;
}

export { IResourceWorkingCopy };
