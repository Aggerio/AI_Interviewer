import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';
import { AbstractTextFileService } from './textFileService.js';
import { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';
import { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';
import { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';
import { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';
import { ITextResourceConfigurationService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';
import '../../../../../../override/vs/platform/dialogs/common/dialogs.js';
import { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';
import { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';
import { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';
import { IElevatedFileService } from '../../files/common/elevatedFileService.js';
import { IFilesConfigurationService } from '../../filesConfiguration/common/filesConfigurationService.js';
import { ILifecycleService } from '../../lifecycle/common/lifecycle.js';
import { IPathService } from '../../path/common/pathService.js';
import { IUntitledTextEditorService } from '../../untitled/common/untitledTextEditorService.js';
import { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';
import { IWorkingCopyFileService } from '../../workingCopy/common/workingCopyFileService.js';
import { IDecorationsService } from '../../decorations/common/decorations.js';
import { IDialogService, IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';
let BrowserTextFileService = class BrowserTextFileService extends AbstractTextFileService {
    constructor(fileService, untitledTextEditorService, lifecycleService, instantiationService, modelService, environmentService, dialogService, fileDialogService, textResourceConfigurationService, filesConfigurationService, codeEditorService, pathService, workingCopyFileService, uriIdentityService, languageService, elevatedFileService, logService, decorationsService) {
        super(fileService, untitledTextEditorService, lifecycleService, instantiationService, modelService, environmentService, dialogService, fileDialogService, textResourceConfigurationService, filesConfigurationService, codeEditorService, pathService, workingCopyFileService, uriIdentityService, languageService, logService, elevatedFileService, decorationsService);
        this.registerListeners();
    }
    registerListeners() {
        this.lifecycleService.onBeforeShutdown(event => event.veto(this.onBeforeShutdown(), 'veto.textFiles'));
    }
    onBeforeShutdown() {
        if (( this.files.models.some(model => model.hasState(2 )))) {
            return true;
        }
        return false;
    }
};
BrowserTextFileService = ( __decorate([
    ( __param(0, IFileService)),
    ( __param(1, IUntitledTextEditorService)),
    ( __param(2, ILifecycleService)),
    ( __param(3, IInstantiationService)),
    ( __param(4, IModelService)),
    ( __param(5, IWorkbenchEnvironmentService)),
    ( __param(6, IDialogService)),
    ( __param(7, IFileDialogService)),
    ( __param(8, ITextResourceConfigurationService)),
    ( __param(9, IFilesConfigurationService)),
    ( __param(10, ICodeEditorService)),
    ( __param(11, IPathService)),
    ( __param(12, IWorkingCopyFileService)),
    ( __param(13, IUriIdentityService)),
    ( __param(14, ILanguageService)),
    ( __param(15, IElevatedFileService)),
    ( __param(16, ILogService)),
    ( __param(17, IDecorationsService))
], BrowserTextFileService));
export { BrowserTextFileService };
