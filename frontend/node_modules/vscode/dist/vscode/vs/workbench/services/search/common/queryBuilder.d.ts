import { URI } from '../../../../base/common/uri.js';
import { ITextSearchPreviewOptions } from './search.js';

interface ICommonQueryBuilderOptions {
    _reason?: string;
    excludePattern?: string | string[];
    includePattern?: string | string[];
    extraFileResources?: URI[];
    /** Parse the special ./ syntax supported by the searchview, and expand foo to ** /foo */
    expandPatterns?: boolean;
    maxResults?: number;
    maxFileSize?: number;
    disregardIgnoreFiles?: boolean;
    disregardGlobalIgnoreFiles?: boolean;
    disregardParentIgnoreFiles?: boolean;
    disregardExcludeSettings?: boolean;
    disregardSearchExcludeSettings?: boolean;
    ignoreSymlinks?: boolean;
    onlyOpenEditors?: boolean;
}
interface ITextQueryBuilderOptions extends ICommonQueryBuilderOptions {
    previewOptions?: ITextSearchPreviewOptions;
    fileEncoding?: string;
    beforeContext?: number;
    afterContext?: number;
    isSmartCase?: boolean;
    notebookSearchConfig?: {
        includeMarkupInput: boolean;
        includeMarkupPreview: boolean;
        includeCodeInput: boolean;
        includeOutput: boolean;
    };
}

export { ITextQueryBuilderOptions };
