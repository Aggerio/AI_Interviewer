import { ExtensionsRegistry } from '../../../services/extensions/common/extensionsRegistry.js';
import { terminalContributionsDescriptor } from './terminal.js';
import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';
import { URI } from 'monaco-editor/esm/vs/base/common/uri.js';
const terminalsExtPoint = ( ExtensionsRegistry.registerExtensionPoint(terminalContributionsDescriptor));
const ITerminalContributionService = ( createDecorator('terminalContributionsService'));
class TerminalContributionService {
    get terminalProfiles() { return this._terminalProfiles; }
    constructor() {
        this._terminalProfiles = [];
        terminalsExtPoint.setHandler(contributions => {
            this._terminalProfiles = ( contributions.map(c => {
                return c.value?.profiles?.filter(p => hasValidTerminalIcon(p)).map(e => {
                    return { ...e, extensionIdentifier: c.description.identifier.value };
                }) || [];
            })).flat();
        });
    }
}
function hasValidTerminalIcon(profile) {
    return !profile.icon ||
        (typeof profile.icon === 'string' ||
            URI.isUri(profile.icon) ||
            ('light' in profile.icon && 'dark' in profile.icon &&
                URI.isUri(profile.icon.light) && URI.isUri(profile.icon.dark)));
}
export { ITerminalContributionService, TerminalContributionService };
