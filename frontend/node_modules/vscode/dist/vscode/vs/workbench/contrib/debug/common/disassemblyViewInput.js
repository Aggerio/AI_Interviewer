import { EditorInput } from '../../../common/editor/editorInput.js';
import { localize } from 'monaco-editor/esm/vs/nls.js';
class DisassemblyViewInput extends EditorInput {
    constructor() {
        super(...arguments);
        this.resource = undefined;
    }
    static { this.ID = 'debug.disassemblyView.input'; }
    get typeId() {
        return DisassemblyViewInput.ID;
    }
    static get instance() {
        if (!DisassemblyViewInput._instance || DisassemblyViewInput._instance.isDisposed()) {
            DisassemblyViewInput._instance = ( new DisassemblyViewInput());
        }
        return DisassemblyViewInput._instance;
    }
    getName() {
        return ( localize('disassemblyInputName', "Disassembly"));
    }
    matches(other) {
        return other instanceof DisassemblyViewInput;
    }
}
export { DisassemblyViewInput };
