import { NOTEBOOK_EDITOR_ID } from '../common/notebookCommon.js';
import { isCompositeNotebookEditorInput } from '../../../../../../override/vs/workbench/contrib/notebook/common/notebookEditorInput.js';
const IPYNB_VIEW_TYPE = 'jupyter-notebook';
const JUPYTER_EXTENSION_ID = 'ms-toolsai.jupyter';
const KERNEL_RECOMMENDATIONS = ( new Map());
KERNEL_RECOMMENDATIONS.set(IPYNB_VIEW_TYPE, ( new Map()));
KERNEL_RECOMMENDATIONS.get(IPYNB_VIEW_TYPE)?.set('python', {
    extensionIds: [
        'ms-python.python',
        JUPYTER_EXTENSION_ID
    ],
    displayName: 'Python + Jupyter',
});
var CellEditState;
( (function(CellEditState) {
    CellEditState[CellEditState["Preview"] = 0] = "Preview";
    CellEditState[CellEditState["Editing"] = 1] = "Editing";
})(CellEditState || (CellEditState = {})));
function getNotebookEditorFromEditorPane(editorPane) {
    if (!editorPane) {
        return;
    }
    if (editorPane.getId() === NOTEBOOK_EDITOR_ID) {
        return editorPane.getControl();
    }
    const input = editorPane.input;
    if (input && isCompositeNotebookEditorInput()) {
        return editorPane.getControl()?.notebookEditor;
    }
    return undefined;
}
export { CellEditState, IPYNB_VIEW_TYPE, JUPYTER_EXTENSION_ID, KERNEL_RECOMMENDATIONS, getNotebookEditorFromEditorPane };
