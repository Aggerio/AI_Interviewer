import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';
import * as nls from 'monaco-editor/esm/vs/nls.js';
import { Action } from 'monaco-editor/esm/vs/base/common/actions.js';
import { IContextViewService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';
import { SelectActionViewItem } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionViewItems.js';
import { defaultSelectBoxStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';
import { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';
import { peekViewTitleBackground } from 'monaco-editor/esm/vs/editor/contrib/peekView/browser/peekView.js';
import { editorBackground } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';
let SwitchQuickDiffViewItem = class SwitchQuickDiffViewItem extends SelectActionViewItem {
    constructor(action, providers, selected, contextViewService, themeService) {
        const items = ( providers.map(provider => ({ provider, text: provider })));
        let startingSelection = providers.indexOf(selected);
        if (startingSelection === -1) {
            startingSelection = 0;
        }
        const styles = { ...defaultSelectBoxStyles };
        const theme = themeService.getColorTheme();
        const editorBackgroundColor = theme.getColor(editorBackground);
        const peekTitleColor = theme.getColor(peekViewTitleBackground);
        const opaqueTitleColor = peekTitleColor?.makeOpaque(editorBackgroundColor) ?? editorBackgroundColor;
        styles.selectBackground = ( ( opaqueTitleColor.lighten(.6)).toString());
        super(null, action, items, startingSelection, contextViewService, styles, { ariaLabel: ( nls.localize('remotes', 'Switch quick diff base')) });
        this.optionsItems = items;
    }
    setSelection(provider) {
        const index = this.optionsItems.findIndex(item => item.provider === provider);
        this.select(index);
    }
    getActionContext(_, index) {
        return this.optionsItems[index];
    }
    render(container) {
        super.render(container);
        this.setFocusable(true);
    }
};
SwitchQuickDiffViewItem = ( __decorate([
    ( __param(3, IContextViewService)),
    ( __param(4, IThemeService))
], SwitchQuickDiffViewItem));
class SwitchQuickDiffBaseAction extends Action {
    static { this.ID = 'quickDiff.base.switch'; }
    static { this.LABEL = ( nls.localize('quickDiff.base.switch', "Switch Quick Diff Base")); }
    constructor(callback) {
        super(SwitchQuickDiffBaseAction.ID, SwitchQuickDiffBaseAction.LABEL, undefined, undefined);
        this.callback = callback;
    }
    async run(event) {
        return this.callback(event);
    }
}
export { SwitchQuickDiffBaseAction, SwitchQuickDiffViewItem };
