import * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';
import { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';
class WebviewWindowDragMonitor extends Disposable {
    constructor(getWebview) {
        super();
        this._register(dom.addDisposableListener(window, dom.EventType.DRAG_START, () => {
            getWebview()?.windowDidDragStart();
        }));
        const onDragEnd = () => {
            getWebview()?.windowDidDragEnd();
        };
        this._register(dom.addDisposableListener(window, dom.EventType.DRAG_END, onDragEnd));
        this._register(dom.addDisposableListener(window, dom.EventType.MOUSE_MOVE, currentEvent => {
            if (currentEvent.buttons === 0) {
                onDragEnd();
            }
        }));
    }
}
export { WebviewWindowDragMonitor };
