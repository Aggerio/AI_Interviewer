import * as nls from 'monaco-editor/esm/vs/nls.js';
import { languagesExtPoint } from '../../../services/language/common/languageService.js';
var CodeActionExtensionPointFields;
( (function(CodeActionExtensionPointFields) {
    CodeActionExtensionPointFields["languages"] = "languages";
    CodeActionExtensionPointFields["actions"] = "actions";
    CodeActionExtensionPointFields["kind"] = "kind";
    CodeActionExtensionPointFields["title"] = "title";
    CodeActionExtensionPointFields["description"] = "description";
})(CodeActionExtensionPointFields || (CodeActionExtensionPointFields = {})));
const codeActionsExtensionPointSchema = ( Object.freeze({
    type: 'array',
    markdownDescription: ( nls.localize('contributes.codeActions', "Configure which editor to use for a resource.")),
    items: {
        type: 'object',
        required: [CodeActionExtensionPointFields.languages, CodeActionExtensionPointFields.actions],
        properties: {
            [CodeActionExtensionPointFields.languages]: {
                type: 'array',
                description: ( nls.localize(
                    'contributes.codeActions.languages',
                    "Language modes that the code actions are enabled for."
                )),
                items: { type: 'string' }
            },
            [CodeActionExtensionPointFields.actions]: {
                type: 'object',
                required: [CodeActionExtensionPointFields.kind, CodeActionExtensionPointFields.title],
                properties: {
                    [CodeActionExtensionPointFields.kind]: {
                        type: 'string',
                        markdownDescription: ( nls.localize(
                            'contributes.codeActions.kind',
                            "`CodeActionKind` of the contributed code action."
                        )),
                    },
                    [CodeActionExtensionPointFields.title]: {
                        type: 'string',
                        description: ( nls.localize(
                            'contributes.codeActions.title',
                            "Label for the code action used in the UI."
                        )),
                    },
                    [CodeActionExtensionPointFields.description]: {
                        type: 'string',
                        description: ( nls.localize(
                            'contributes.codeActions.description',
                            "Description of what the code action does."
                        )),
                    },
                }
            }
        }
    }
}));
const codeActionsExtensionPointDescriptor = {
    extensionPoint: 'codeActions',
    deps: [languagesExtPoint],
    jsonSchema: codeActionsExtensionPointSchema
};
export { codeActionsExtensionPointDescriptor };
