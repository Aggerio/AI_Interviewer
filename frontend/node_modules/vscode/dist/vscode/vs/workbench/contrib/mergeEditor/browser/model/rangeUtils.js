import { Position } from 'monaco-editor/esm/vs/editor/common/core/position.js';
import { LengthObj } from 'monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/length.js';
function rangeContainsPosition(range, position) {
    if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {
        return false;
    }
    if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {
        return false;
    }
    if (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {
        return false;
    }
    return true;
}
function lengthBetweenPositions(position1, position2) {
    if (position1.lineNumber === position2.lineNumber) {
        return ( new LengthObj(0, position2.column - position1.column));
    }
    else {
        return ( new LengthObj(position2.lineNumber - position1.lineNumber, position2.column - 1));
    }
}
function addLength(position, length) {
    if (length.lineCount === 0) {
        return ( new Position(position.lineNumber, position.column + length.columnCount));
    }
    else {
        return ( new Position(position.lineNumber + length.lineCount, length.columnCount + 1));
    }
}
function rangeIsBeforeOrTouching(range, other) {
    return (range.endLineNumber < other.startLineNumber ||
        (range.endLineNumber === other.startLineNumber &&
            range.endColumn <= other.startColumn));
}
export { addLength, lengthBetweenPositions, rangeContainsPosition, rangeIsBeforeOrTouching };
