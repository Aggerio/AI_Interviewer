import { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';
const FindInFilesActionId = 'workbench.action.findInFiles';
const FocusSearchFromResults = 'search.action.focusSearchFromResults';
const OpenMatch = 'search.action.openResult';
const OpenMatchToSide = 'search.action.openResultToSide';
const RemoveActionId = 'search.action.remove';
const CopyPathCommandId = 'search.action.copyPath';
const CopyMatchCommandId = 'search.action.copyMatch';
const CopyAllCommandId = 'search.action.copyAll';
const OpenInEditorCommandId = 'search.action.openInEditor';
const ClearSearchHistoryCommandId = 'search.action.clearHistory';
const FocusSearchListCommandID = 'search.action.focusSearchList';
const ReplaceActionId = 'search.action.replace';
const ReplaceAllInFileActionId = 'search.action.replaceAllInFile';
const ReplaceAllInFolderActionId = 'search.action.replaceAllInFolder';
const CloseReplaceWidgetActionId = 'closeReplaceInFilesWidget';
const ToggleCaseSensitiveCommandId = 'toggleSearchCaseSensitive';
const ToggleWholeWordCommandId = 'toggleSearchWholeWord';
const ToggleRegexCommandId = 'toggleSearchRegex';
const TogglePreserveCaseId = 'toggleSearchPreserveCase';
const AddCursorsAtSearchResults = 'addCursorsAtSearchResults';
const RevealInSideBarForSearchResults = 'search.action.revealInSideBar';
const ReplaceInFilesActionId = 'workbench.action.replaceInFiles';
const ShowAllSymbolsActionId = 'workbench.action.showAllSymbols';
const CancelSearchActionId = 'search.action.cancel';
const RefreshSearchResultsActionId = 'search.action.refreshSearchResults';
const FocusNextSearchResultActionId = 'search.action.focusNextSearchResult';
const FocusPreviousSearchResultActionId = 'search.action.focusPreviousSearchResult';
const ToggleSearchOnTypeActionId = 'workbench.action.toggleSearchOnType';
const CollapseSearchResultsActionId = 'search.action.collapseSearchResults';
const ExpandSearchResultsActionId = 'search.action.expandSearchResults';
const ClearSearchResultsActionId = 'search.action.clearSearchResults';
const ViewAsTreeActionId = 'search.action.viewAsTree';
const ViewAsListActionId = 'search.action.viewAsList';
const ToggleQueryDetailsActionId = 'workbench.action.search.toggleQueryDetails';
const ExcludeFolderFromSearchId = 'search.action.excludeFromSearch';
const FocusNextInputActionId = 'search.focus.nextInputBox';
const FocusPreviousInputActionId = 'search.focus.previousInputBox';
const RestrictSearchToFolderId = 'search.action.restrictSearchToFolder';
const FindInFolderId = 'filesExplorer.findInFolder';
const FindInWorkspaceId = 'filesExplorer.findInWorkspace';
const SearchViewVisibleKey = ( new RawContextKey('searchViewletVisible', true));
const SearchViewFocusedKey = ( new RawContextKey('searchViewletFocus', false));
const InputBoxFocusedKey = ( new RawContextKey('inputBoxFocus', false));
const SearchInputBoxFocusedKey = ( new RawContextKey('searchInputBoxFocus', false));
const ReplaceInputBoxFocusedKey = ( new RawContextKey('replaceInputBoxFocus', false));
const PatternIncludesFocusedKey = ( new RawContextKey('patternIncludesInputBoxFocus', false));
const PatternExcludesFocusedKey = ( new RawContextKey('patternExcludesInputBoxFocus', false));
const ReplaceActiveKey = ( new RawContextKey('replaceActive', false));
const HasSearchResults = ( new RawContextKey('hasSearchResult', false));
const FirstMatchFocusKey = ( new RawContextKey('firstMatchFocus', false));
const FileMatchOrMatchFocusKey = ( new RawContextKey('fileMatchOrMatchFocus', false));
const FileMatchOrFolderMatchFocusKey = ( new RawContextKey('fileMatchOrFolderMatchFocus', false));
const FileMatchOrFolderMatchWithResourceFocusKey = ( new RawContextKey('fileMatchOrFolderMatchWithResourceFocus', false));
const FileFocusKey = ( new RawContextKey('fileMatchFocus', false));
const FolderFocusKey = ( new RawContextKey('folderMatchFocus', false));
const ResourceFolderFocusKey = ( new RawContextKey('folderMatchWithResourceFocus', false));
const IsEditableItemKey = ( new RawContextKey('isEditableItem', true));
const MatchFocusKey = ( new RawContextKey('matchFocus', false));
const ViewHasSearchPatternKey = ( new RawContextKey('viewHasSearchPattern', false));
const ViewHasReplacePatternKey = ( new RawContextKey('viewHasReplacePattern', false));
const ViewHasFilePatternKey = ( new RawContextKey('viewHasFilePattern', false));
const ViewHasSomeCollapsibleKey = ( new RawContextKey('viewHasSomeCollapsibleResult', false));
const InTreeViewKey = ( new RawContextKey('inTreeView', false));
export { AddCursorsAtSearchResults, CancelSearchActionId, ClearSearchHistoryCommandId, ClearSearchResultsActionId, CloseReplaceWidgetActionId, CollapseSearchResultsActionId, CopyAllCommandId, CopyMatchCommandId, CopyPathCommandId, ExcludeFolderFromSearchId, ExpandSearchResultsActionId, FileFocusKey, FileMatchOrFolderMatchFocusKey, FileMatchOrFolderMatchWithResourceFocusKey, FileMatchOrMatchFocusKey, FindInFilesActionId, FindInFolderId, FindInWorkspaceId, FirstMatchFocusKey, FocusNextInputActionId, FocusNextSearchResultActionId, FocusPreviousInputActionId, FocusPreviousSearchResultActionId, FocusSearchFromResults, FocusSearchListCommandID, FolderFocusKey, HasSearchResults, InTreeViewKey, InputBoxFocusedKey, IsEditableItemKey, MatchFocusKey, OpenInEditorCommandId, OpenMatch, OpenMatchToSide, PatternExcludesFocusedKey, PatternIncludesFocusedKey, RefreshSearchResultsActionId, RemoveActionId, ReplaceActionId, ReplaceActiveKey, ReplaceAllInFileActionId, ReplaceAllInFolderActionId, ReplaceInFilesActionId, ReplaceInputBoxFocusedKey, ResourceFolderFocusKey, RestrictSearchToFolderId, RevealInSideBarForSearchResults, SearchInputBoxFocusedKey, SearchViewFocusedKey, SearchViewVisibleKey, ShowAllSymbolsActionId, ToggleCaseSensitiveCommandId, TogglePreserveCaseId, ToggleQueryDetailsActionId, ToggleRegexCommandId, ToggleSearchOnTypeActionId, ToggleWholeWordCommandId, ViewAsListActionId, ViewAsTreeActionId, ViewHasFilePatternKey, ViewHasReplacePatternKey, ViewHasSearchPatternKey, ViewHasSomeCollapsibleKey };
