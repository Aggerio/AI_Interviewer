import { TunnelPrivacy } from '../../remote/common/remoteAuthorityResolver.js';

interface TunnelOptions {
    remoteAddress: {
        port: number;
        host: string;
    };
    localAddressPort?: number;
    label?: string;
    public?: boolean;
    privacy?: string;
    protocol?: string;
}
declare enum TunnelPrivacyId {
    ConstantPrivate = "constantPrivate",
    Private = "private",
    Public = "public"
}
interface TunnelCreationOptions {
    elevationRequired?: boolean;
}
interface TunnelProviderFeatures {
    elevation: boolean;
    /**
     * @deprecated
     */
    public?: boolean;
    privacyOptions: TunnelPrivacy[];
}
declare enum ProvidedOnAutoForward {
    Notify = 1,
    OpenBrowser = 2,
    OpenPreview = 3,
    Silent = 4,
    Ignore = 5,
    OpenBrowserOnce = 6
}
interface ProvidedPortAttributes {
    port: number;
    autoForwardAction: ProvidedOnAutoForward;
}

export { ProvidedOnAutoForward, ProvidedPortAttributes, TunnelCreationOptions, TunnelOptions, TunnelPrivacyId, TunnelProviderFeatures };
