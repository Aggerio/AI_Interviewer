import { distinct } from 'monaco-editor/esm/vs/base/common/arrays.js';
import { Extensions } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';
import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';
import { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';
function getDisallowedIgnoredSettings() {
    const allSettings = ( Registry.as(Extensions.Configuration)).getConfigurationProperties();
    return ( Object.keys(allSettings)).filter(setting => !!allSettings[setting].disallowSyncIgnore);
}
function getDefaultIgnoredSettings() {
    const allSettings = ( Registry.as(Extensions.Configuration)).getConfigurationProperties();
    const ignoreSyncSettings = ( Object.keys(allSettings)).filter(setting => !!allSettings[setting].ignoreSync);
    const machineSettings = ( Object.keys(allSettings)).filter(setting => allSettings[setting].scope === 2  || allSettings[setting].scope === 6 );
    const disallowedSettings = getDisallowedIgnoredSettings();
    return distinct([...ignoreSyncSettings, ...machineSettings, ...disallowedSettings]);
}
const IUserDataSyncEnablementService = ( createDecorator('IUserDataSyncEnablementService'));
const IUserDataSyncService = ( createDecorator('IUserDataSyncService'));
export { IUserDataSyncEnablementService, IUserDataSyncService, getDefaultIgnoredSettings, getDisallowedIgnoredSettings };
