import { IconIdentifier, ThemeIcon } from '../../../base/common/themables.js';
import { Event } from '../../../base/common/event.js';
import { IJSONSchema } from '../../../base/common/jsonSchema.js';
import { URI } from '../../../base/common/uri.js';

type IconDefaults = ThemeIcon | IconDefinition;
interface IconDefinition {
    font?: IconFontContribution;
    fontCharacter: string;
}
interface IconContribution {
    readonly id: string;
    description: string | undefined;
    deprecationMessage?: string;
    readonly defaults: IconDefaults;
}
declare namespace IconContribution {
    function getDefinition(contribution: IconContribution, registry: IIconRegistry): IconDefinition | undefined;
}
interface IconFontContribution {
    readonly id: string;
    readonly definition: IconFontDefinition;
}
interface IconFontDefinition {
    readonly weight?: string;
    readonly style?: string;
    readonly src: IconFontSource[];
}
declare namespace IconFontDefinition {
    function toJSONObject(iconFont: IconFontDefinition): any;
    function fromJSONObject(json: any): IconFontDefinition | undefined;
}
interface IconFontSource {
    readonly location: URI;
    readonly format: string;
}
interface IIconRegistry {
    readonly onDidChange: Event<void>;
    /**
     * Register a icon to the registry.
     * @param id The icon id
     * @param defaults The default values
     * @param description The description
     */
    registerIcon(id: IconIdentifier, defaults: IconDefaults, description?: string): ThemeIcon;
    /**
     * Deregister a icon from the registry.
     */
    deregisterIcon(id: IconIdentifier): void;
    /**
     * Get all icon contributions
     */
    getIcons(): IconContribution[];
    /**
     * Get the icon for the given id
     */
    getIcon(id: IconIdentifier): IconContribution | undefined;
    /**
     * JSON schema for an object to assign icon values to one of the icon contributions.
     */
    getIconSchema(): IJSONSchema;
    /**
     * JSON schema to for a reference to a icon contribution.
     */
    getIconReferenceSchema(): IJSONSchema;
    /**
     * Register a icon font to the registry.
     * @param id The icon font id
     * @param definition The icon font definition
     */
    registerIconFont(id: string, definition: IconFontDefinition): IconFontDefinition;
    /**
     * Deregister an icon font to the registry.
     */
    deregisterIconFont(id: string): void;
    /**
     * Get the icon font for the given id
     */
    getIconFont(id: string): IconFontDefinition | undefined;
}

export { IIconRegistry, IconContribution, IconDefaults, IconDefinition, IconFontContribution, IconFontDefinition, IconFontSource };
