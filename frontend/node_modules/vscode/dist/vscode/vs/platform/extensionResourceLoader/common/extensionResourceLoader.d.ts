import { ServiceIdentifier } from '../../instantiation/common/instantiation.js';
import { URI } from '../../../base/common/uri.js';
import { TargetPlatform } from '../../extensions/common/extensions.js';

declare const IExtensionResourceLoaderService: ServiceIdentifier<IExtensionResourceLoaderService>;
/**
 * A service useful for reading resources from within extensions.
 */
interface IExtensionResourceLoaderService {
    readonly _serviceBrand: undefined;
    /**
     * Read a certain resource within an extension.
     */
    readExtensionResource(uri: URI): Promise<string>;
    /**
     * Returns whether the gallery provides extension resources.
     */
    readonly supportsExtensionGalleryResources: boolean;
    /**
     * Return true if the given URI is a extension gallery resource.
     */
    isExtensionGalleryResource(uri: URI): boolean;
    /**
     * Computes the URL of a extension gallery resource. Returns `undefined` if gallery does not provide extension resources.
     */
    getExtensionGalleryResourceURL(galleryExtension: {
        publisher: string;
        name: string;
        version: string;
        targetPlatform?: TargetPlatform;
    }, path?: string): URI | undefined;
}

export { IExtensionResourceLoaderService };
