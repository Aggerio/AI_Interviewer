import * as nls from 'monaco-editor/esm/vs/nls.js';
import { OS } from 'monaco-editor/esm/vs/base/common/platform.js';
import { Extensions } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';
import { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';
function readKeyboardConfig(configurationService) {
    const keyboard = configurationService.getValue('keyboard');
    const dispatch = ((keyboard?.dispatch === 'keyCode' ? 1  : 0) );
    const mapAltGrToCtrlAlt = Boolean(keyboard?.mapAltGrToCtrlAlt);
    return { dispatch, mapAltGrToCtrlAlt };
}
const configurationRegistry = ( Registry.as(Extensions.Configuration));
const keyboardConfiguration = {
    'id': 'keyboard',
    'order': 15,
    'type': 'object',
    'title': ( nls.localize('keyboardConfigurationTitle', "Keyboard")),
    'properties': {
        'keyboard.dispatch': {
            scope: 1 ,
            type: 'string',
            enum: ['code', 'keyCode'],
            default: 'code',
            markdownDescription: ( nls.localize(
                'dispatch',
                "Controls the dispatching logic for key presses to use either `code` (recommended) or `keyCode`."
            )),
            included: OS === 2  || OS === 3
        },
        'keyboard.mapAltGrToCtrlAlt': {
            scope: 1 ,
            type: 'boolean',
            default: false,
            markdownDescription: ( nls.localize(
                'mapAltGrToCtrlAlt',
                "Controls if the AltGraph+ modifier should be treated as Ctrl+Alt+."
            )),
            included: OS === 1
        }
    }
};
configurationRegistry.registerConfiguration(keyboardConfiguration);
export { readKeyboardConfig };
