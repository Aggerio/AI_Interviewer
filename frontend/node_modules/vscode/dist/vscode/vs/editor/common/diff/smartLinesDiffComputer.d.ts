import { LineRangeMapping } from './linesDiffComputer.js';

interface IDiffComputationResult {
    quitEarly: boolean;
    identical: boolean;
    /**
     * The changes as (legacy) line change array.
     * @deprecated Use `changes2` instead.
     */
    changes: ILineChange[];
    /**
     * The changes as (modern) line range mapping array.
     */
    changes2: readonly LineRangeMapping[];
}
/**
 * A change
 */
interface IChange {
    readonly originalStartLineNumber: number;
    readonly originalEndLineNumber: number;
    readonly modifiedStartLineNumber: number;
    readonly modifiedEndLineNumber: number;
}
/**
 * A character level change.
 */
interface ICharChange extends IChange {
    readonly originalStartColumn: number;
    readonly originalEndColumn: number;
    readonly modifiedStartColumn: number;
    readonly modifiedEndColumn: number;
}
/**
 * A line change
 */
interface ILineChange extends IChange {
    readonly charChanges: ICharChange[] | undefined;
}

export { IChange, ICharChange, IDiffComputationResult, ILineChange };
