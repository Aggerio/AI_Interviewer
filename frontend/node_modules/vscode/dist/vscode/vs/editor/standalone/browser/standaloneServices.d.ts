import { ServiceIdentifier, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';
import { IDisposable } from '../../../base/common/lifecycle.js';
import * as monaco from 'monaco-editor';

type IEditorOverrideServices = monaco.editor.IEditorOverrideServices
/**
 * We don't want to eagerly instantiate services because embedders get a one time chance
 * to override services when they create the first editor.
 */
declare namespace StandaloneServices {
    function get<T>(serviceId: ServiceIdentifier<T>): T;
    function initialize(overrides: IEditorOverrideServices): IInstantiationService;
    /**
     * Executes callback once services are initialized.
     */
    function withServices(callback: () => IDisposable): IDisposable;
}

export { IEditorOverrideServices, StandaloneServices };
