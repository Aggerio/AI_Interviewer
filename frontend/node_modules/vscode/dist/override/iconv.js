const textDecoder = new TextEncoder();
const textEncoder = new TextDecoder();
const encoder = {
    write(str) {
        return textDecoder.encode(str);
    },
    end() {
        return undefined;
    }
};
const decoder = {
    write(str) {
        return textEncoder.decode(str);
    },
    end() {
        return undefined;
    }
};
function checkEncoding(encoding) {
    if (!encodingExists(encoding)) {
        throw new Error(`Encoding not found: ${encoding}`);
    }
}
const getEncoder = (encoding) => {
    checkEncoding(encoding);
    return encoder;
};
const getDecoder = (encoding) => {
    checkEncoding(encoding);
    return decoder;
};
const encodingExists = (encoding) => {
    return encoding === 'utf8';
};
const decode = (buffer, encoding) => {
    checkEncoding(encoding);
    return decoder.write(buffer);
};
const encode = (buffer, encoding) => {
    checkEncoding(encoding);
    return encoder.write(buffer);
};
export { decode, encode, encodingExists, getDecoder, getEncoder };
