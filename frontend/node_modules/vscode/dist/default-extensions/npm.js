import { registerExtension } from '../extensions.js';

var manifest = {name:"npm",publisher:"vscode",displayName:"NPM support for VS Code",description:"Extension to add task support for npm scripts.",version:"1.0.1",license:"MIT",engines:{vscode:"0.10.x"},icon:"images/npm_icon.png",categories:["Other"],enabledApiProposals:["terminalQuickFixProvider"],scripts:{compile:"gulp compile-extension:npm",watch:"gulp watch-extension:npm"},dependencies:{"find-up":"^4.1.0","find-yarn-workspace-root":"^2.0.0","jsonc-parser":"^2.2.1",minimatch:"^3.0.4","request-light":"^0.7.0",which:"^2.0.2","which-pm":"^2.0.0"},devDependencies:{"@types/minimatch":"^3.0.3","@types/node":"16.x","@types/which":"^2.0.0"},resolutions:{"which-pm/load-yaml-file/**/argparse":"1.0.9"},main:"./out/npmMain",browser:"./dist/browser/npmBrowserMain",activationEvents:["onTaskType:npm","onLanguage:json","workspaceContains:package.json"],capabilities:{virtualWorkspaces:{supported:"limited",description:"Functionality that requires running the 'npm' command is not available in virtual workspaces."},untrustedWorkspaces:{supported:"limited",description:"This extension executes tasks, which require trust to run."}},contributes:{languages:[{id:"ignore",extensions:[".npmignore"]},{id:"properties",extensions:[".npmrc"]}],views:{explorer:[{id:"npm",name:"NPM Scripts",when:"npm:showScriptExplorer",icon:"$(json)",visibility:"hidden",contextualTitle:"NPM Scripts"}]},commands:[{command:"npm.runScript",title:"Run",icon:"$(run)"},{command:"npm.debugScript",title:"Debug",icon:"$(debug)"},{command:"npm.openScript",title:"Open"},{command:"npm.runInstall",title:"Run Install"},{command:"npm.refresh",title:"Refresh",icon:"$(refresh)"},{command:"npm.runSelectedScript",title:"Run Script"},{command:"npm.runScriptFromFolder",title:"Run NPM Script in Folder..."},{command:"npm.packageManager",title:"Get Configured Package Manager"}],menus:{commandPalette:[{command:"npm.refresh",when:"false"},{command:"npm.runScript",when:"false"},{command:"npm.debugScript",when:"false"},{command:"npm.openScript",when:"false"},{command:"npm.runInstall",when:"false"},{command:"npm.runSelectedScript",when:"false"},{command:"npm.runScriptFromFolder",when:"false"},{command:"npm.packageManager",when:"false"}],"editor/context":[{command:"npm.runSelectedScript",when:"resourceFilename == 'package.json' && resourceScheme == file",group:"navigation@+1"}],"view/title":[{command:"npm.refresh",when:"view == npm",group:"navigation"}],"view/item/context":[{command:"npm.openScript",when:"view == npm && viewItem == packageJSON",group:"navigation@1"},{command:"npm.runInstall",when:"view == npm && viewItem == packageJSON",group:"navigation@2"},{command:"npm.openScript",when:"view == npm && viewItem == script",group:"navigation@1"},{command:"npm.runScript",when:"view == npm && viewItem == script",group:"navigation@2"},{command:"npm.runScript",when:"view == npm && viewItem == script",group:"inline"},{command:"npm.debugScript",when:"view == npm && viewItem == script",group:"inline"},{command:"npm.debugScript",when:"view == npm && viewItem == script",group:"navigation@3"}],"explorer/context":[{when:"config.npm.enableRunFromFolder && explorerViewletVisible && explorerResourceIsFolder && resourceScheme == file",command:"npm.runScriptFromFolder",group:"2_workspace"}]},configuration:{id:"npm",type:"object",title:"Npm",properties:{"npm.autoDetect":{type:"string","enum":["off","on"],"default":"on",scope:"resource",description:"Controls whether npm scripts should be automatically detected."},"npm.runSilent":{type:"boolean","default":false,scope:"resource",markdownDescription:"Run npm commands with the `--silent` option."},"npm.packageManager":{scope:"resource",type:"string","enum":["auto","npm","yarn","pnpm"],enumDescriptions:["Auto-detect which package manager to use for running scripts based on lock files and installed package managers.","Use npm as the package manager for running scripts.","Use yarn as the package manager for running scripts.","Use pnpm as the package manager for running scripts."],"default":"auto",description:"The package manager used to run scripts."},"npm.exclude":{type:["string","array"],items:{type:"string"},description:"Configure glob patterns for folders that should be excluded from automatic script detection.",scope:"resource"},"npm.enableScriptExplorer":{type:"boolean","default":false,scope:"resource",deprecationMessage:"The NPM Script Explorer is now available in 'Views' menu in the Explorer in all folders.",description:"Enable an explorer view for npm scripts when there is no top-level 'package.json' file."},"npm.enableRunFromFolder":{type:"boolean","default":false,scope:"resource",description:"Enable running npm scripts contained in a folder from the Explorer context menu."},"npm.scriptExplorerAction":{type:"string","enum":["open","run"],markdownDescription:"The default click action used in the NPM Scripts Explorer: `open` or `run`, the default is `open`.",scope:"window","default":"open"},"npm.scriptExplorerExclude":{type:"array",items:{type:"string"},markdownDescription:"An array of regular expressions that indicate which scripts should be excluded from the NPM Scripts view.",scope:"resource","default":[]},"npm.fetchOnlinePackageInfo":{type:"boolean",description:"Fetch data from https://registry.npmjs.org and https://registry.bower.io to provide auto-completion and information on hover features on npm dependencies.","default":true,scope:"window",tags:["usesOnlineServices"]},"npm.scriptHover":{type:"boolean",description:"Display hover with 'Run' and 'Debug' commands for scripts.","default":true,scope:"window"}}},jsonValidation:[{fileMatch:"package.json",url:"https://json.schemastore.org/package"},{fileMatch:"bower.json",url:"https://json.schemastore.org/bower"}],taskDefinitions:[{type:"npm",required:["script"],properties:{script:{type:"string",description:"The npm script to customize."},path:{type:"string",description:"The path to the folder of the package.json file that provides the script. Can be omitted."}},when:"shellExecutionSupported"}],terminalQuickFixes:[{id:"ms-vscode.npm-command",commandLineMatcher:"npm",commandExitResult:"error",outputMatcher:{anchor:"bottom",length:8,lineMatcher:"Did you mean (?:this|one of these)\\?((?:\\n.+?npm .+ #.+)+)",offset:2}}]},repository:{type:"git",url:"https://github.com/microsoft/vscode.git"}};

const { registerFileUrl } = registerExtension(manifest);

registerFileUrl('./dist/browser/npmBrowserMain.js', new URL('./npm/npmBrowserMain.js', import.meta.url).toString(), 'text/javascript');

registerFileUrl('dist/browser/npmBrowserMain.js.map', new URL('./npm/npmBrowserMain.js.map', import.meta.url).toString(), 'application/json');
