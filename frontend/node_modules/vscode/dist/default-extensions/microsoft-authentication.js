import { registerExtension } from '../extensions.js';

var manifest = {name:"microsoft-authentication",publisher:"vscode",license:"MIT",displayName:"Microsoft Account",description:"Microsoft authentication provider",version:"0.0.1",engines:{vscode:"^1.42.0"},icon:"media/icon.png",categories:["Other"],activationEvents:[],enabledApiProposals:["idToken"],capabilities:{virtualWorkspaces:true,untrustedWorkspaces:{supported:true}},extensionKind:["ui","workspace"],contributes:{authentication:[{label:"Microsoft",id:"microsoft"},{label:"Microsoft Sovereign Cloud",id:"microsoft-sovereign-cloud"}],configuration:[{title:"Microsoft Sovereign Cloud",properties:{"microsoft-sovereign-cloud.environment":{type:"string",markdownDescription:"The Sovereign Cloud to use for authentication. If you select `custom`, you must also set the `#microsoft-sovereign-cloud.customEnvironment#` setting.","enum":["ChinaCloud","USGovernment","custom"],enumDescriptions:["Azure China","Azure US Government","A custom Microsoft Sovereign Cloud"]},"microsoft-sovereign-cloud.customEnvironment":{type:"object",additionalProperties:true,markdownDescription:"The custom configuration for the Sovereign Cloud to use with the Microsoft Sovereign Cloud authentication provider. This along with setting `#microsoft-sovereign-cloud.environment#` to `custom` is required to use this feature.",properties:{name:{type:"string",description:"The name of the custom Sovereign Cloud."},portalUrl:{type:"string",description:"The portal URL for the custom Sovereign Cloud."},managementEndpointUrl:{type:"string",description:"The management endpoint for the custom Sovereign Cloud."},resourceManagerEndpointUrl:{type:"string",description:"The resource manager endpoint for the custom Sovereign Cloud."},activeDirectoryEndpointUrl:{type:"string",description:"The Active Directory endpoint for the custom Sovereign Cloud."},activeDirectoryResourceId:{type:"string",description:"The Active Directory resource ID for the custom Sovereign Cloud."}},required:["name","portalUrl","managementEndpointUrl","resourceManagerEndpointUrl","activeDirectoryEndpointUrl","activeDirectoryResourceId"]}}}]},aiKey:"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",main:"./out/extension.js",browser:"./dist/browser/extension.js",scripts:{"vscode:prepublish":"npm run compile",compile:"gulp compile-extension:microsoft-authentication","compile-web":"npx webpack-cli --config extension-browser.webpack.config --mode none",watch:"gulp watch-extension:microsoft-authentication","watch-web":"npx webpack-cli --config extension-browser.webpack.config --mode none --watch --info-verbosity verbose"},devDependencies:{"@types/node":"16.x","@types/node-fetch":"^2.5.7","@types/randombytes":"^2.0.0","@types/sha.js":"^2.4.0","@types/uuid":"8.0.0"},dependencies:{"node-fetch":"2.6.7","@azure/ms-rest-azure-env":"^2.0.0","@vscode/extension-telemetry":"0.7.5"},repository:{type:"git",url:"https://github.com/microsoft/vscode.git"}};

const { registerFileUrl } = registerExtension(manifest);

registerFileUrl('./dist/browser/extension.js', new URL('./microsoft-authentication/extension.js', import.meta.url).toString(), 'text/javascript');

registerFileUrl('dist/browser/extension.js.map', new URL('./microsoft-authentication/extension.js.map', import.meta.url).toString(), 'application/json');
