import { registerExtension } from '../extensions.js';

var manifest = {name:"json-language-features",displayName:"JSON Language Features",description:"Provides rich language support for JSON files.",version:"1.0.0",publisher:"vscode",license:"MIT",aiKey:"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",engines:{vscode:"^1.77.0"},enabledApiProposals:[],icon:"icons/json.png",activationEvents:["onLanguage:json","onLanguage:jsonc"],main:"./client/out/node/jsonClientMain",browser:"./client/dist/browser/jsonClientMain",capabilities:{virtualWorkspaces:true,untrustedWorkspaces:{supported:true}},scripts:{compile:"npx gulp compile-extension:json-language-features-client compile-extension:json-language-features-server",watch:"npx gulp watch-extension:json-language-features-client watch-extension:json-language-features-server","install-client-next":"yarn add vscode-languageclient@next"},categories:["Programming Languages"],contributes:{configuration:{id:"json",order:20,type:"object",title:"JSON",properties:{"json.schemas":{type:"array",scope:"resource",description:"Associate schemas to JSON files in the current project.",items:{type:"object","default":{fileMatch:["/myfile"],url:"schemaURL"},properties:{url:{type:"string","default":"/user.schema.json",description:"A URL to a schema or a relative path to a schema in the current directory"},fileMatch:{type:"array",items:{type:"string","default":"MyFile.json",description:"A file pattern that can contain '*' to match against when resolving JSON files to schemas."},minItems:1,description:"An array of file patterns to match against when resolving JSON files to schemas. `*` can be used as a wildcard. Exclusion patterns can also be defined and start with '!'. A file matches when there is at least one matching pattern and the last matching pattern is not an exclusion pattern."},schema:{$ref:"http://json-schema.org/draft-07/schema#",description:"The schema definition for the given URL. The schema only needs to be provided to avoid accesses to the schema URL."}}}},"json.validate.enable":{type:"boolean",scope:"window","default":true,description:"Enable/disable JSON validation."},"json.format.enable":{type:"boolean",scope:"window","default":true,description:"Enable/disable default JSON formatter"},"json.format.keepLines":{type:"boolean",scope:"window","default":false,description:"Keep all existing new lines when formatting."},"json.trace.server":{type:"string",scope:"window","enum":["off","messages","verbose"],"default":"off",description:"Traces the communication between VS Code and the JSON language server."},"json.colorDecorators.enable":{type:"boolean",scope:"window","default":true,description:"Enables or disables color decorators",deprecationMessage:"The setting `json.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`."},"json.maxItemsComputed":{type:"number","default":5000,description:"The maximum number of outline symbols and folding regions computed (limited for performance reasons)."},"json.schemaDownload.enable":{type:"boolean","default":true,description:"When enabled, JSON schemas can be fetched from http and https locations.",tags:["usesOnlineServices"]}}},configurationDefaults:{"[json]":{"editor.quickSuggestions":{strings:true},"editor.suggest.insertMode":"replace"},"[jsonc]":{"editor.quickSuggestions":{strings:true},"editor.suggest.insertMode":"replace"}},jsonValidation:[{fileMatch:"*.schema.json",url:"http://json-schema.org/draft-07/schema#"}],commands:[{command:"json.clearCache",title:"Clear Schema Cache",category:"JSON"},{command:"json.sort",title:"Sort Document",category:"JSON"}]},dependencies:{"@vscode/extension-telemetry":"^0.7.5","request-light":"^0.7.0","vscode-languageclient":"^8.2.0-next.1"},devDependencies:{"@types/node":"16.x"},repository:{type:"git",url:"https://github.com/microsoft/vscode.git"}};

const { registerFileUrl } = registerExtension(manifest);

registerFileUrl('./client/dist/browser/jsonClientMain.js', new URL('./json-language-features/jsonClientMain.js', import.meta.url).toString(), 'text/javascript');

registerFileUrl('client/dist/browser/jsonClientMain.js.map', new URL('./json-language-features/jsonClientMain.js.map', import.meta.url).toString(), 'application/json');

registerFileUrl('server/dist/browser/jsonServerMain.js', new URL('./json-language-features/jsonServerMain.js', import.meta.url).toString(), 'application/javascript');

registerFileUrl('server/dist/browser/jsonServerMain.js.map', new URL('./json-language-features/jsonServerMain.js.map', import.meta.url).toString(), 'application/json');
