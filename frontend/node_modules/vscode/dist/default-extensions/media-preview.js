import { registerExtension } from '../extensions.js';

var manifest = {name:"media-preview",displayName:"Media Preview",description:"Provides VS Code's built-in previews for images, audio, and video",extensionKind:["ui","workspace"],version:"1.0.0",publisher:"vscode",icon:"icon.png",license:"MIT",aiKey:"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",engines:{vscode:"^1.70.0"},main:"./out/extension",browser:"./dist/browser/extension.js",categories:["Other"],activationEvents:[],capabilities:{virtualWorkspaces:true,untrustedWorkspaces:{supported:true}},contributes:{configuration:{type:"object",title:"Media Previewer",properties:{"mediaPreview.video.autoPlay":{type:"boolean","default":false,markdownDescription:"Start playing videos on mute automatically."},"mediaPreview.video.loop":{type:"boolean","default":false,markdownDescription:"Loop videos over again automatically."}}},customEditors:[{viewType:"imagePreview.previewEditor",displayName:"Image Preview",priority:"builtin",selector:[{filenamePattern:"*.{jpg,jpe,jpeg,png,bmp,gif,ico,webp,avif}"}]},{viewType:"vscode.audioPreview",displayName:"Audio Preview",priority:"builtin",selector:[{filenamePattern:"*.{mp3,wav,ogg,oga}"}]},{viewType:"vscode.videoPreview",displayName:"Video Preview",priority:"builtin",selector:[{filenamePattern:"*.{mp4,webm}"}]}],commands:[{command:"imagePreview.zoomIn",title:"Zoom in",category:"Image Preview"},{command:"imagePreview.zoomOut",title:"Zoom out",category:"Image Preview"},{command:"imagePreview.copyImage",title:"Copy",category:"Image Preview"}],menus:{commandPalette:[{command:"imagePreview.zoomIn",when:"activeCustomEditorId == 'imagePreview.previewEditor'",group:"1_imagePreview"},{command:"imagePreview.zoomOut",when:"activeCustomEditorId == 'imagePreview.previewEditor'",group:"1_imagePreview"},{command:"imagePreview.copyImage",when:"false"}],"webview/context":[{command:"imagePreview.copyImage",when:"webviewId == 'imagePreview.previewEditor'"}]}},scripts:{compile:"gulp compile-extension:media-preview",watch:"npm run build-preview && gulp watch-extension:media-preview","vscode:prepublish":"npm run build-ext","build-ext":"node ../../node_modules/gulp/bin/gulp.js --gulpfile ../../build/gulpfile.extensions.js compile-extension:media-preview ./tsconfig.json","compile-web":"npx webpack-cli --config extension-browser.webpack.config --mode none","watch-web":"npx webpack-cli --config extension-browser.webpack.config --mode none --watch --info-verbosity verbose"},dependencies:{"@vscode/extension-telemetry":"0.7.5","vscode-uri":"^3.0.6"},repository:{type:"git",url:"https://github.com/microsoft/vscode.git"}};

const { registerFileUrl } = registerExtension(manifest);

registerFileUrl('./dist/browser/extension.js', new URL('./media-preview/extension.js', import.meta.url).toString(), 'text/javascript');

registerFileUrl('dist/browser/extension.js.map', new URL('./media-preview/extension.js.map', import.meta.url).toString(), 'application/json');

registerFileUrl('./media/audioPreview.css', new URL('./media-preview/audioPreview.css', import.meta.url).toString(), 'text/css');

registerFileUrl('./media/loading.svg', new URL('./media-preview/loading.svg', import.meta.url).toString(), 'image/svg+xml');

registerFileUrl('./media/loading-dark.svg', new URL('./media-preview/loading-dark.svg', import.meta.url).toString(), 'image/svg+xml');

registerFileUrl('./media/loading-hc.svg', new URL('./media-preview/loading-hc.svg', import.meta.url).toString(), 'image/svg+xml');

registerFileUrl('./media/audioPreview.js', new URL('./media-preview/audioPreview.js', import.meta.url).toString(), 'application/javascript');

registerFileUrl('./media/imagePreview.css', new URL('./media-preview/imagePreview.css', import.meta.url).toString(), 'text/css');

registerFileUrl('./media/imagePreview.js', new URL('./media-preview/imagePreview.js', import.meta.url).toString(), 'application/javascript');

registerFileUrl('./media/videoPreview.css', new URL('./media-preview/videoPreview.css', import.meta.url).toString(), 'text/css');

registerFileUrl('./media/videoPreview.js', new URL('./media-preview/videoPreview.js', import.meta.url).toString(), 'application/javascript');
