import { __decorate, __param } from '../node_modules/tslib/tslib.es6.js';
import '../missing-services.js';
import { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';
import { URI } from 'monaco-editor/esm/vs/base/common/uri.js';
import { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';
import { ILoggerService, LogLevel } from 'monaco-editor/esm/vs/platform/log/common/log.js';
import { FileLoggerService } from '../vscode/vs/platform/log/common/fileLog.js';
import '../vscode/vs/workbench/contrib/output/browser/output.contribution.js';
let _FileLoggerService = class _FileLoggerService extends FileLoggerService {
    constructor(logLevel, fileService) {
        super(logLevel, ( URI.from({ scheme: 'logs', path: '/' })), fileService);
    }
};
_FileLoggerService = __decorate([
    ( __param(1, IFileService))
], _FileLoggerService);
function getServiceOverride(logLevel = LogLevel.Info) {
    return {
        [( ILoggerService.toString())]: new SyncDescriptor(_FileLoggerService, [logLevel], true)
    };
}
export { getServiceOverride as default };
