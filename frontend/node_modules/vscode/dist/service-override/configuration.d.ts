import * as vscode from 'vscode';
import { URI } from '../vscode/vs/base/common/uri.js';
export { IAnyWorkspaceIdentifier } from '../vscode/vs/platform/workspace/common/workspace.js';
import { IConfigurationRegistry } from '../vscode/vs/platform/configuration/common/configurationRegistry.js';
export { ConfigurationScope, IConfigurationDefaults, IConfigurationNode } from '../vscode/vs/platform/configuration/common/configurationRegistry.js';
import { IEditorOverrideServices } from '../vscode/vs/editor/standalone/browser/standaloneServices.js';
export { IColorCustomizations, IThemeScopedColorCustomizations } from '../vscode/vs/workbench/services/themes/common/workbenchThemeService.js';
export { IWorkspaceFolderCreationData } from '../vscode/vs/platform/workspaces/common/workspaces.js';

declare function updateUserConfiguration(configurationJson: string): Promise<void>;
declare function getUserConfiguration(): Promise<string>;
declare function onUserConfigurationChange(callback: () => void): vscode.Disposable;
declare const configurationRegistry: IConfigurationRegistry;
declare function getServiceOverride(defaultWorkspaceUri: URI): IEditorOverrideServices;

export { configurationRegistry, getServiceOverride as default, getUserConfiguration, onUserConfigurationChange, updateUserConfiguration };
