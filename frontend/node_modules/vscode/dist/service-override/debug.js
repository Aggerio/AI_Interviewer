import '../missing-services.js';
import { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';
import { IDebugService } from '../vscode/vs/workbench/contrib/debug/common/debug.js';
import { DebugService } from '../vscode/vs/workbench/contrib/debug/browser/debugService.js';
import { LanguageFeaturesService } from '../vscode/vs/editor/common/services/languageFeaturesService.js';
import { ILanguageFeaturesService } from 'monaco-editor/esm/vs/editor/common/services/languageFeatures.js';
import { ConfigurationResolverService } from '../vscode/vs/workbench/services/configurationResolver/browser/configurationResolverService.js';
import { IConfigurationResolverService } from '../vscode/vs/workbench/services/configurationResolver/common/configurationResolver.js';
import getServiceOverride$1 from './layout.js';
import '../vscode/vs/workbench/contrib/debug/browser/debug.contribution.js';
const original = DebugService.prototype['showError'];
DebugService.prototype['showError'] = function (message, errorActions) {
    return original.call(this, message, errorActions, false);
};
function getServiceOverride() {
    return {
        ...getServiceOverride$1(),
        [( ILanguageFeaturesService.toString())]: new SyncDescriptor(LanguageFeaturesService, [], true),
        [( IDebugService.toString())]: new SyncDescriptor(DebugService, [], true),
        [( IConfigurationResolverService.toString())]: new SyncDescriptor(ConfigurationResolverService, [], true)
    };
}
export { getServiceOverride as default };
