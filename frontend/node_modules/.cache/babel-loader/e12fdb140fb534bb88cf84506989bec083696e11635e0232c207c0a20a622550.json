{"ast":null,"code":"var _jsxFileName = \"/home/aggerio/code_playground/ai_interviewer/frontend/src/components/VideoStreaming.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoStreaming() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const imageRef = useRef(null);\n  const socket = useRef(null);\n  const playing = useRef(false);\n  function start() {\n    // Access the video element and set its attributes\n    const video = videoRef.current;\n    video.width = 500;\n    video.height = 375;\n    if (navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: false\n      }).then(function (stream) {\n        video.srcObject = stream;\n        // video.play();\n      }).catch(function (error) {\n        console.log(error);\n        console.log(\"Something went wrong!\");\n      });\n    }\n  }\n  useEffect(() => {\n    // Create a WebSocket connection to the Flask server\n    if (playing.current == false) {\n      start();\n    }\n    socket.current = io(\"http://localhost:5001\");\n\n    // Access the canvas element\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.canvas.hidden = true;\n    const FPS = 22;\n    const captureAndSendFrame = () => {\n      ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n      const data = canvas.toDataURL(\"image/png\").split(\"data:image/png;base64,\")[1];\n      socket.current.emit(\"image\", data);\n    };\n    const intervalId = setInterval(captureAndSendFrame, 1000 / FPS);\n    // Handle the response image received from the server\n    socket.current.on(\"response_back\", imageData => {\n      const image = imageRef.current;\n\n      // Pause the video before updating the image source\n      // videoRef.current.pause();\n\n      image.src = \"data:image/png;base64,\" + imageData;\n    });\n    return () => {\n      // Clean up and stop the interval when unmounting\n      clearInterval(intervalId);\n      if (socket.current) {\n        socket.current.disconnect();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        id: \"canvasOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        ref: videoRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoStreaming, \"FVG3hjXZAAYDpIvsVAs27QVxjfg=\");\n_c = VideoStreaming;\nexport default VideoStreaming;\nvar _c;\n$RefreshReg$(_c, \"VideoStreaming\");","map":{"version":3,"names":["React","useEffect","useRef","io","jsxDEV","_jsxDEV","VideoStreaming","_s","videoRef","canvasRef","imageRef","socket","playing","start","video","current","width","height","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","catch","error","console","log","canvas","ctx","getContext","hidden","FPS","captureAndSendFrame","drawImage","data","toDataURL","split","emit","intervalId","setInterval","on","imageData","image","src","clearInterval","disconnect","children","id","ref","fileName","_jsxFileName","lineNumber","columnNumber","autoPlay","_c","$RefreshReg$"],"sources":["/home/aggerio/code_playground/ai_interviewer/frontend/src/components/VideoStreaming.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\n\nfunction VideoStreaming() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const imageRef = useRef(null);\n  const socket = useRef(null);\n  const playing = useRef(false);\n\n\n  function start() {\n    // Access the video element and set its attributes\n    const video = videoRef.current;\n    video.width = 500;\n    video.height = 375;\n    if (navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: false })\n        .then(function(stream) {\n          video.srcObject = stream;\n          // video.play();\n        })\n        .catch(function(error) {\n          console.log(error);\n          console.log(\"Something went wrong!\");\n        });\n    }\n\n  }\n  useEffect(() => {\n    // Create a WebSocket connection to the Flask server\n    if (playing.current == false) {\n      start();\n    }\n    socket.current = io(\"http://localhost:5001\");\n\n\n    // Access the canvas element\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.canvas.hidden = true;\n\n    const FPS = 22;\n\n    const captureAndSendFrame = () => {\n      ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n      const data = canvas.toDataURL(\"image/png\").split(\"data:image/png;base64,\")[1];\n      socket.current.emit(\"image\", data);\n    };\n\n    const intervalId = setInterval(captureAndSendFrame, 1000 / FPS);\n    // Handle the response image received from the server\n    socket.current.on(\"response_back\", (imageData) => {\n      const image = imageRef.current;\n\n      // Pause the video before updating the image source\n      // videoRef.current.pause();\n\n      image.src = \"data:image/png;base64,\" + imageData;\n\n    });\n    return () => {\n      // Clean up and stop the interval when unmounting\n      clearInterval(intervalId);\n      if (socket.current) {\n        socket.current.disconnect();\n      }\n    };\n  }, []);\n  return (\n    <div>\n      <div id=\"container\">\n        <canvas ref={canvasRef} id=\"canvasOutput\"></canvas>\n        <video autoPlay={true} ref={videoRef}></video>\n      </div>\n    </div>\n  );\n}\n\nexport default VideoStreaming;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}