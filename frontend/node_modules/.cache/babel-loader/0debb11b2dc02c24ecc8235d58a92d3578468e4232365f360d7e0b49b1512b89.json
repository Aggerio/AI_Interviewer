{"ast":null,"code":"var _jsxFileName = \"/home/aggerio/code_playground/ai_interviewer/frontend/src/components/Editor.jsx\",\n  _s = $RefreshSig$();\nimport { React, useRef, useEffect, useState } from \"react\";\nimport { Editor } from '@monaco-editor/react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeEditor() {\n  _s();\n  const monacoRef = useRef(null);\n  const [executing, setExecution] = useState(false);\n  const [intervalFunction, setIF] = useState(null);\n  const [language, setLanguage] = useState('python');\n  const [submissionToken, setSubmissionToken] = useState(null);\n  function handleEditorWillMount(monaco) {\n    // here is the monaco instance\n    // do something before editor is mounted\n    monaco.languages.typescript.javascriptDefaults.setEagerModelSync(true);\n  }\n  function handleEditorDidMount(editor, monaco) {\n    // here is another way to get monaco instance\n    // you can also store it in `useRef` for further usage\n    monacoRef.current = editor;\n  }\n  function getSubmissionStatus(token_id) {}\n  function handleRun() {\n    // console.log(monacoRef.current.getValue());\n    axios.post('http://localhost:5000/run', {\n      srcCode: monacoRef.current.getValue(),\n      language: language\n    }).then(function (response) {\n      console.log(response.data.success);\n      if (response.data.success) {\n        setExecution(true);\n        setSubmissionToken(response.data.token);\n      }\n      ;\n    }).catch(function (error) {\n      // console.log(`Server error ${error}`)\n      // TODO use react toast\n      // toast.error(\"Server error! Contact developer\")\n    });\n  }\n  function handleSubmit() {\n    console.log(\"submit code\");\n  }\n  useEffect(() => {\n    if (executing) {\n      const intervalId = setInterval(() => {\n        console.log('this will run every 500 milliseconds');\n      }, 500);\n      setIF(intervalId);\n\n      //TODO continously check if execution has ended \n      //if it has set executing to false and show results\n    } else {\n      if (intervalFunction != null) {\n        clearInterval(intervalFunction);\n        setIF(null);\n      }\n    }\n    return () => {};\n  }, [executing]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        height: \"50vh\",\n        width: \"100vh\",\n        defaultLanguage: language,\n        theme: \"vs-dark\",\n        defaultValue: \"// some comment\",\n        beforeMount: handleEditorWillMount,\n        onMount: handleEditorDidMount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[100px] bg-red-300\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRun,\n        disabled: executing,\n        children: \"  run solution \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[100px] bg-blue-100\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: executing,\n        children: \" Submit solution \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), executing ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Executing \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeEditor, \"W7Uxvbbw8/GO1AfAoeNeLCpQhbk=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Editor","axios","jsxDEV","_jsxDEV","CodeEditor","_s","monacoRef","executing","setExecution","intervalFunction","setIF","language","setLanguage","submissionToken","setSubmissionToken","handleEditorWillMount","monaco","languages","typescript","javascriptDefaults","setEagerModelSync","handleEditorDidMount","editor","current","getSubmissionStatus","token_id","handleRun","post","srcCode","getValue","then","response","console","log","data","success","token","catch","error","handleSubmit","intervalId","setInterval","clearInterval","children","height","width","defaultLanguage","theme","defaultValue","beforeMount","onMount","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/aggerio/code_playground/ai_interviewer/frontend/src/components/Editor.jsx"],"sourcesContent":["import { React, useRef, useEffect, useState } from \"react\";\nimport { Editor } from '@monaco-editor/react';\nimport axios from \"axios\";\n\n\n\nfunction CodeEditor() {\n  const monacoRef = useRef(null);\n  const [executing, setExecution] = useState(false);\n  const [intervalFunction, setIF] = useState(null);\n  const [language, setLanguage] = useState('python');\n  const [submissionToken, setSubmissionToken] = useState(null);\n\n  function handleEditorWillMount(monaco) {\n    // here is the monaco instance\n    // do something before editor is mounted\n    monaco.languages.typescript.javascriptDefaults.setEagerModelSync(true);\n  }\n\n  function handleEditorDidMount(editor, monaco) {\n    // here is another way to get monaco instance\n    // you can also store it in `useRef` for further usage\n    monacoRef.current = editor;\n  }\n\n  function getSubmissionStatus(token_id) {\n\n  }\n\n  function handleRun() {\n    // console.log(monacoRef.current.getValue());\n    axios.post('http://localhost:5000/run', { srcCode: monacoRef.current.getValue(), language: language })\n      .then(function(response) {\n        console.log(response.data.success);\n        if (response.data.success) {\n          setExecution(true);\n          setSubmissionToken(response.data.token);\n        };\n      })\n      .catch(function(error) {\n        // console.log(`Server error ${error}`)\n        // TODO use react toast\n        // toast.error(\"Server error! Contact developer\")\n\n      })\n  }\n\n  function handleSubmit() {\n    console.log(\"submit code\");\n  }\n\n  useEffect(() => {\n\n    if (executing) {\n      const intervalId = setInterval(() => {\n        console.log('this will run every 500 milliseconds')\n      }, 500);\n      setIF(intervalId);\n\n      //TODO continously check if execution has ended \n      //if it has set executing to false and show results\n    }\n    else {\n      if (intervalFunction != null) {\n        clearInterval(intervalFunction);\n        setIF(null);\n      }\n    }\n\n\n    return () => {\n\n    };\n\n  }, [executing]);\n\n  return (\n    <div>\n\n      {/*ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n  theme=\"dark\" */}\n      <div>\n        <Editor\n          height=\"50vh\"\n          width=\"100vh\"\n          defaultLanguage={language}\n          theme=\"vs-dark\"\n          defaultValue=\"// some comment\"\n          beforeMount={handleEditorWillMount}\n          onMount={handleEditorDidMount}\n        />\n      </div>\n\n      <div className=\"w-[100px] bg-red-300\" >\n        <button onClick={handleRun} disabled={executing}>  run solution </button>\n      </div>\n      <div className=\"w-[100px] bg-blue-100\">\n        <button onClick={handleSubmit} disabled={executing}> Submit solution </button>\n      </div>\n      {executing ? <h1>Executing </h1> : <div></div>}\n    </div>\n  );\n}\n\nexport default CodeEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}