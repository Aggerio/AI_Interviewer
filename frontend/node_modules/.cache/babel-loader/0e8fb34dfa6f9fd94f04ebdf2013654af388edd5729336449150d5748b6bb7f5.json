{"ast":null,"code":"var _jsxFileName = \"/home/aggerio/code_playground/ai_interviewer/frontend/src/components/ChatGpt.jsx\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatGpt() {\n  _s();\n  const [currentText, setCurrentText] = useState('Welcome to the Interview');\n  function update_response() {\n    axios.get('http://localhost:5002/updates').then(json_data => {\n      // console.log(json_data);\n      const update = json_data.data.updated;\n      if (update) {\n        setCurrentText(json_data.data.response);\n      }\n    });\n  }\n  useEffect(() => {\n    //Check for updates every second\n    const interval = setInterval(() => update_response(), 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", currentText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 11\n  }, this);\n}\n_s(ChatGpt, \"NeDlETvENsksj0UWrvTcg96BjUo=\");\n_c = ChatGpt;\nvar _c;\n$RefreshReg$(_c, \"ChatGpt\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ChatGpt","_s","currentText","setCurrentText","update_response","get","then","json_data","update","data","updated","response","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aggerio/code_playground/ai_interviewer/frontend/src/components/ChatGpt.jsx"],"sourcesContent":["import { React, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function ChatGpt() {\r\n  const [currentText, setCurrentText] = useState('Welcome to the Interview');\r\n\r\n  function update_response() {\r\n    axios.get('http://localhost:5002/updates')\r\n      .then((json_data) => {\r\n        // console.log(json_data);\r\n        const update = json_data.data.updated;\r\n        if (update) {\r\n          setCurrentText(json_data.data.response);\r\n        }\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    //Check for updates every second\r\n    const interval = setInterval(() => update_response(), 1000)\r\n\r\n    return (() => {\r\n      clearInterval(interval);\r\n\r\n    });\r\n  }, []);\r\n\r\n\r\n  return (<div><p> {currentText}</p></div>);\r\n}"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,0BAA0B,CAAC;EAE1E,SAASQ,eAAeA,CAAA,EAAG;IACzBP,KAAK,CAACQ,GAAG,CAAC,+BAA+B,CAAC,CACvCC,IAAI,CAAEC,SAAS,IAAK;MACnB;MACA,MAAMC,MAAM,GAAGD,SAAS,CAACE,IAAI,CAACC,OAAO;MACrC,IAAIF,MAAM,EAAE;QACVL,cAAc,CAACI,SAAS,CAACE,IAAI,CAACE,QAAQ,CAAC;MACzC;IACF,CAAC,CAAC;EACN;EAEAhB,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,QAAQ,GAAGC,WAAW,CAAC,MAAMT,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC;IAE3D,OAAQ,MAAM;MACZU,aAAa,CAACF,QAAQ,CAAC;IAEzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAGN,oBAAQb,OAAA;IAAAgB,QAAA,eAAKhB,OAAA;MAAAgB,QAAA,GAAG,GAAC,EAACb,WAAW;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC1C;AAAClB,EAAA,CA1BuBD,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}